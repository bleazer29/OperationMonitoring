@model OperationMonitoring.Models.Provider

<div class="content-heading">
    <div class="content-heading__info">
        <h4>
            Information about provider -
            @Html.DisplayFor(model => model.Name)
        </h4>
        <a class="btn btn-primary" asp-action="Index">Back to List</a>
    </div>
</div>

<!-- INFO -->
<div class="form-pos form-info">
    <div class="form-info__item">
        <div class="form-info__label">
            @Html.DisplayNameFor(model => model.Name)
        </div>
        <div class="form-info_data">
            @Html.DisplayFor(model => model.Name)
        </div>
    </div>
    <div class="form-info__item">
        <div class="form-info__label">
            @Html.DisplayNameFor(model => model.Address)
        </div>
        <div class="form-info_data">
            @Html.DisplayFor(model => model.Address)
        </div>
    </div>
    <div class="form-info__item">
        <div class="form-info__label">
            @Html.DisplayNameFor(model => model.EDRPOU)
        </div>
        <div class="form-info_data">
            @Html.DisplayFor(model => model.EDRPOU)
        </div>
    </div>
    <div class="btn btn-primary js-btn-edit">Edit information</div>
</div>

<!-- EDIT FORM -->
<div class="form-pos hidden">
    <form asp-controller="Providers" asp-action="EditProvider" method="post" asp-route-providerId="@Model.Id">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="Name" class="control-label"></label>
            <input name="editName" required value="@Model.Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Address" class="control-label"></label>
            <input name="editAddress" required value="@Model.Address" class="form-control" />
            <span asp-validation-for="Address" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="EDRPOU" class="control-label"></label>
            <input name="editEDRPOU" required value="@Model.EDRPOU" class="form-control" />
            <span asp-validation-for="EDRPOU" class="text-danger"></span>
        </div>

        <div class="form-group">
            <input type="submit" value="Save changes" class="btn btn-primary" />
        </div>
    </form>
</div>

<table class="table">
    <thead>
        <tr>
            <th colspan="2" class="@(ViewBag.CurrentSort.ToString() == "nomenclatureName" ? "sort-asc" : @ViewBag.CurrentSort.ToString() == "nomenclatureName_desc" ? "sort-desc" : " ")">
                @Html.ActionLink("Nomenclature", "Index", new { oldSortOrder = ViewBag.CurrentSort, newSortOrder = "nomenclatureName", searchString = ViewBag.CurrentFilter })
            </th>
            <th class="@(ViewBag.CurrentSort.ToString() == "providerName" ? "sort-asc" : @ViewBag.CurrentSort.ToString() == "providerName_desc" ? "sort-desc" : " ")">
                @Html.ActionLink("Provider", "Index", new { oldSortOrder = ViewBag.CurrentSort, newSortOrder = "providerName", searchString = ViewBag.CurrentFilter })
            </th>
            <th class="@(ViewBag.CurrentSort.ToString() == "storageName" ? "sort-asc" : @ViewBag.CurrentSort.ToString() == "storageName_desc" ? "sort-desc" : " ")">
                @Html.ActionLink("Storage", "Index", new { oldSortOrder = ViewBag.CurrentSort, newSortOrder = "storageName", searchString = ViewBag.CurrentFilter })
            </th>  
        </tr>
    </thead>

    <tbody>
        @foreach (Stock item in ViewBag.Stocks)
        {
        <tr>
            <td>
                @item.Nomenclature.VendorCode
            </td>
            <td>
               @item.Nomenclature.Name
            </td>
            <td>
                @{
                    var storage = item.Storage;
                    while (storage != null)
                    {
                        @storage.Name
                        if (storage.Parent != null)
                            storage = storage.Parent;
                    }
                }
            </td>
            <td>
                @item.Amount
            </td>
            <td>
                <a class="btn" asp-action="Details" asp-route-id="@item.Id">Details</a>
            </td>
        </tr>
        }
    </tbody>

</table>
<!-- PAGES -->
<div class="pages">
    <span>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</span>
    @X.PagedList.Mvc.Core.HtmlHelper.PagedListPager(Html, Model, page => Url.Action("Index",
         new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>
