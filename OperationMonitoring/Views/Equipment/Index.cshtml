@model IEnumerable<OperationMonitoring.Models.Equipment>

@{
    ViewData["Title"] = "Index";
}
@{
    List<Order> orders = new List<Order>();
    if (ViewBag.Orders != null)
    {
        orders = ViewBag.Orders;
    }
}

<div class="content-heading">
    <h4>Equipment</h4>
    <a class="btn btn-primary" asp-action="Create">Add New Equipment</a>
</div>

<!-- SEARCH PANEL -->
<div class="search-panel">
    <div class="search-form">
        <div class="search-field">
            <div class="search-label">
                <label class="control-label">Status:</label>
            </div>
            <div class="search-select">
                <select id="searchStatus" class="form-select" asp-items="@(new SelectList(ViewBag.StatusList, "Id", "Title"))">
                    <option selected value="-1">All</option>
                </select>
            </div>
        </div>
        <div class="search-field">
            <div class="search-label">
                <label class="control-label">Field:</label>
            </div>
            <div class="search-select">
                <select id="searchField" class="form-select">
                    <option selected value="Department">Department</option>
                    <option value="Category">Category</option>
                    <option value="Type">Type</option>
                    <option value="Title">Title</option>
                    <option value="SerialNumber">Serial Number</option>
                    <option value="InventoryNumber">Inventory Number</option>
                    <option value="DiameterOuter">Outer Diameter</option>
                    <option value="DiameterInner">Inner Diameter</option>
                    <option value="Length">Length</option>
                </select>
            </div>
        </div>
        <div class="search-field search-field-input">
            <div class="search-label">
                <label class="control-label">Search:</label>
            </div>
            <div class="search-textbox">
                <input type="text" id="searchString" value="" />
            </div>
        </div>
        <button class="btn btn-primary js-btn-search">Search</button>
        <a asp-action="Index" class="btn btn-alter btn-refresh">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 22"><path d="m120.6 38.723c-3.312-7.713-7.766-14.367-13.36-19.961-5.595-5.594-12.248-10.05-19.962-13.361-7.713-3.314-15.805-4.97-24.278-4.97-7.984 0-15.71 1.506-23.18 4.521-7.468 3.01-14.11 7.265-19.92 12.751l-10.593-10.511c-1.63-1.684-3.503-2.064-5.622-1.141-2.173.924-3.259 2.527-3.259 4.808v36.5c0 1.412.516 2.634 1.548 3.666 1.033 1.032 2.255 1.548 3.667 1.548h36.5c2.282 0 3.884-1.086 4.807-3.259.923-2.118.543-3.992-1.141-5.622l-11.162-11.243c3.803-3.585 8.148-6.341 13.04-8.27 4.889-1.928 9.994-2.893 15.317-2.893 5.649 0 11.04 1.101 16.17 3.3 5.133 2.2 9.572 5.174 13.32 8.922 3.748 3.747 6.722 8.187 8.922 13.32 2.199 5.133 3.299 10.523 3.299 16.17 0 5.65-1.1 11.04-3.299 16.17-2.2 5.133-5.174 9.573-8.922 13.321-3.748 3.748-8.188 6.722-13.32 8.921-5.133 2.2-10.525 3.3-16.17 3.3-6.464 0-12.574-1.412-18.332-4.236-5.757-2.824-10.618-6.816-14.583-11.977-.38-.543-1-.87-1.874-.979-.815 0-1.494.244-2.037.733l-11.162 11.244c-.434.436-.665.991-.692 1.67-.027.68.15 1.29.53 1.833 5.921 7.17 13.09 12.724 21.509 16.661 8.419 3.937 17.3 5.907 26.642 5.907 8.473 0 16.566-1.657 24.279-4.97 7.713-3.313 14.365-7.768 19.961-13.361 5.594-5.596 10.05-12.248 13.361-19.961 3.313-7.713 4.969-15.807 4.969-24.279 0-8.474-1.657-16.564-4.97-24.277" transform="matrix(.12785 0 0 .12786 2.95 2.948)" fill="#ffffff" /></svg>
        </a>
    </div>
</div>

<!-- LIST -->
<div id="paged-list">
    <table class="table table-equipment">
        <thead>
            <tr>
                <th class="sort-asc">
                    <a href="#" data-sort="Status">
                        @Html.DisplayNameFor(model => model.Status)
                    </a>
                </th>
                <th>
                    <a href="#" data-sort="Department">
                        @Html.DisplayNameFor(model => model.Department)
                    </a>
                </th>
                <th>
                    <a href="#" data-sort="Category">
                        @Html.DisplayNameFor(model => model.Category)
                    </a>
                </th>
                <th>
                    <a href="#" data-sort="Type">
                        @Html.DisplayNameFor(model => model.Type)
                    </a>
                </th>
                <th>
                    <a href="#" data-sort="Title">
                        @Html.DisplayNameFor(model => model.Title)
                    </a>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SerialNum)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.InventoryNum)
                </th>
                <th>
                    <a href="#" data-sort="DiameterOuter">
                        @Html.DisplayNameFor(model => model.DiameterOuter)
                    </a>
                </th>
                <th>
                    <a href="#" data-sort="DiameterInner">
                        @Html.DisplayNameFor(model => model.DiameterInner)
                    </a>
                </th>
                <th>
                    <a href="#" data-sort="Length">
                        @Html.DisplayNameFor(model => model.Length)
                    </a>
                </th>
            </tr>
        </thead>
        @foreach (var item in Model)
        {
            <tbody class="@(item.Status.Title != "NA" ? item.OperatingTime > 0 ? item.OperatingTime <= item.WarningTime ? "table-time-warning" : "" : "table-time-danger" : "")">
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Department.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SerialNum)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.InventoryNum)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DiameterOuter)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DiameterInner)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Length)
                    </td>
                </tr>
                <tr>
                    <td colspan="10">
                        @{
                            if (item.Status.Title == "JF")
                            {
                                var order = orders.FirstOrDefault(x => x.Equipment.Id == item.Id);
                                if (order != null)
                                {
                                    <p>
                                        Currently workint at:
                                        @order.Well.Counterparty.Title,
                                        @order.Agreement.AgreementNumber -
                                        @order.Well.Title
                                    </p>
                                }
                            }
                        }
                        @if (item.Status.Title != "NA")
                        {
                            <p class="time-text">
                                Operating time left:
                                <strong class="hours">
                                    @(item.OperatingTime / 60):@{
                                        string minutes;
                                        if (item.OperatingTime % 60 < 10)
                                        {
                                            minutes = "0" + (item.OperatingTime % 60);
                                        }
                                        else
                                        {
                                            minutes = (item.OperatingTime % 60).ToString();
                                        }
                                        @minutes
                                    }
                                </strong>
                                <span>hours</span>
                            </p>
                        }
                        @if (item.Status.Title == "NA")
                        {
                            <a asp-action="Preset" asp-route-id="@item.Id" class="btn">
                                Assemble Equipment
                            </a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn">
                                Equipment Details
                            </a>
                        }
                        else
                        {
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn">
                                Equipment Details
                            </a>
                        }

                    </td>
                </tr>
            </tbody>
        }
    </table>
    <div class="simple-pagination">
        <div class="simple-pagination-first"></div>
        <div class="simple-pagination-previous"></div>
        <div class="simple-pagination-page-numbers"></div>
        <div class="simple-pagination-next"></div>
        <div class="simple-pagination-last"></div>
    </div>
</div>

<script>
    var searchStatus = "-1"; // default
    var searchField = "Department"; // default
    var search = "";
    var sortField = "Status"; // default
    var sortAsc = true; // default

    var pagedList = "#paged-list";
    GenList(pagedList);

    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/data")
        .build();

    hubConnection.on("Receive", function (data) {
        $(pagedList + " table > tbody").remove();
        var json = JSON.parse(data);
        for (let i = 0; i < json.length; i++) {
            $(pagedList + " table").append(
                "<tbody>" +
                "<tr>" +
                "<td>" + json[i].Status.Title + "</td>" +
                "<td>" + json[i].Department.Title + "</td>" +
                "<td>" + json[i].Category.Title + "</td>" +
                "<td>" + json[i].Type.Title + "</td>" +
                "<td>" + json[i].Title + "</td>" +
                "<td>" + json[i].SerialNum + "</td>" +
                "<td>" + json[i].InventoryNum + "</td>" +
                "<td>" + json[i].DiameterOuter + "</td>" +
                "<td>" + json[i].DiameterInner + "</td>" +
                "<td>" + json[i].Length + "</td>" +
                "</tr>" +
                "<tr>" +
                "<td colspan='10'>" +
                getButton(json[i].Status.Title, json[i].Id) +
                    "</td>" +
                "</tr>" +
            "</tbody>"
            );
        }
        GenList(pagedList);
    });

    $(".js-btn-search").click(function () {
        search = $("#searchString").val();
        searchField = $("#searchField option:selected").val();
        searchStatus = $("#searchStatus option:selected").val();
        hubConnection.invoke("SendEquipment", searchStatus, search, searchField, sortField, sortAsc);
    });

    $(pagedList + " th a").click(function (e) {
        e.preventDefault();
        $(pagedList + " th").removeClass();
        if (sortField == $(this).attr("data-sort")) {
            sortAsc = !sortAsc;
        }
        else {
            sortAsc = true;
        }
        if (sortAsc == true) {
            $(this).parent().addClass("sort-asc");
        }
        else {
            $(this).parent().addClass("sort-desc");
        }
        sortField = $(this).attr("data-sort");
        hubConnection.invoke("SendEquipment", searchStatus, search, searchField, sortField, sortAsc);
    });

    hubConnection.start();

    function getTimeInfo(id) {
        @*<p class="time-text">
                                Operating time left:
                                <strong class="hours">
                                    @(item.OperatingTime / 60):@{
                                        string minutes;
                                        if (item.OperatingTime % 60 < 10)
                                        {
                                            minutes = "0" + (item.OperatingTime % 60);
                                        }
                                        else
                                        {
                                            minutes = (item.OperatingTime % 60).ToString();
                                        }
                                        @minutes
                                    }
                                </strong>
                                <span>hours</span>
                            </p>*@
    }
    function getOrderInfo(id) {

    }

    function getButton(status, id) {
        if (status == "NA") {
            return "<a href='/Equipment/Preset/" + id + "' class='btn'> Assemble Equipment </a>";
        }
        else {
            return "<a href='/Equipment/Details/" + id + "' class='btn'> Equipment Details </a>";
        }
    }
</script>

