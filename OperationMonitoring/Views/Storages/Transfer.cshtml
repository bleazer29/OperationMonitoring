
@{List<OperationMonitoring.Models.Stock> stocks = ViewBag.Stocks;}
@{List<OperationMonitoring.Helpers.TreeViewStorage> treeViewStorages = ViewBag.TreeViewStorages;}
@{
    ViewData["Title"] = "Transfer storages";
}
    <div class="container flex-container">

        <div class="storage-items-container" style="max-width:initial">
            <div id="paged-list" class="nomenclature-table">
                <div class="scrollable-table" style="overflow-x:scroll;">
                    <table class="table">
                        <thead>
                            <tr>

                                <th>
                                    <a href="#" data-sort="Status">
                                        Status
                                    </a>
                                </th>
                                <th>
                                    <a href="#" data-sort="VendorCode">
                                        Vendor code
                                    </a>
                                </th>
                                <th>
                                    <a href="#" data-sort="SerialNumber">
                                        Serial number
                                    </a>
                                </th>
                                <th class="sort-asc">
                                    <a href="#" data-sort="Name">
                                        Name
                                    </a>
                                </th>
                                <th>
                                    <a href="#" data-sort="Provider">
                                        Provider
                                    </a>
                                </th>
                                <th>
                                    <a href="#" data-sort="Operationtime">
                                        Operation time
                                    </a>
                                </th>
                                <th>
                                    <a href="#" data-sort="Amount">
                                        Amount
                                    </a>
                                </th>
                                <th>
                                    <a href="#" data-sort="Storage">
                                        Storage
                                    </a>
                                </th>
                                <th>
                                    @*actions*@
                                </th>
                            </tr>
                        </thead>

                        <tbody>
                            @if (stocks != null)
                            {
                                @foreach (var item in stocks)
                                {
                                    var tableClass = "";
                                    if (item.Nomenclature != null)
                                    {
                                        <tr class="@tableClass">

                                            <td></td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Nomenclature.VendorCode)
                                            </td>
                                            <td></td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Nomenclature.Title)
                                            </td>
                                            <td>
                                                @if (item.Nomenclature.Provider != null)
                                                {
                                                    <a asp-controller="Providers" asp-action="Details" asp-route-id="@item.Nomenclature.Provider.Id">@item.Nomenclature.Provider.Title</a>
                                                }

                                            </td>
                                            <td></td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Amount)
                                            </td>
                                            <td>
                                                @if (item.Storage != null)
                                                {
                                                    <a asp-controller="Storages" asp-action="Details" asp-route-id="@item.Storage.Id">@item.Storage.Title</a>
                                                }
                                            </td>
                                            <td>
                                                <a class="btn btn-primary" asp-controller="Nomenclature" asp-action="Details" asp-route-id="@item.Nomenclature.Id">Details</a>
                                            </td>
                                        </tr>

                                    }
                                    else if (item.Part != null)
                                    {
                                        tableClass = (item.Part.OperatingTime > 0) ? (item.Part.OperatingTime < item.Part.WarningTime ? ((item.Part.OperatingTime == item.Part.WarningTime) ? "table-time-warning" : "") : "table-time-danger") : "";
                                        <tr class="@tableClass">

                                            <td>
                                                @{
                                                    if (item.Part.Status != null)
                                                    {
                                                        <span class="equip-current-status">
                                                            @Html.DisplayFor(model => item.Part.Status.Title)
                                                        </span>
                                                    }
                                                }
                                            </td>
                                            <td> </td>
                                            <td> </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Part.Title)
                                            </td>
                                            <td> </td>
                                            <td>
                                                @{
                                                    int timeLeft = item.Part.WarningTime - item.Part.OperatingTime;
                                                    if (timeLeft > 0)
                                                    {
                                                        @(timeLeft / 60)<span>:</span>{
                                                            string minutes;
                                                            if (timeLeft % 60 < 10)
                                                            {
                                                                minutes = "0" + (timeLeft % 60);
                                                            }
                                                            else
                                                            {
                                                                minutes = (timeLeft % 60).ToString();
                                                            }
                                                            @minutes
                                                        }
                                                    }
                                                    else
                                                    {
                                                        timeLeft *= -1;
                                                        <span>Overwork by</span> @(timeLeft / 60)<span>:</span>{
                                                            string minutes;
                                                            if (timeLeft % 60 < 10)
                                                            {
                                                                minutes = "0" + (timeLeft % 60);
                                                            }
                                                            else
                                                            {
                                                                minutes = (timeLeft % 60).ToString();
                                                            }
                                                            @minutes
                                                        }
                                                        <p>No operating time left! Needs maintenance!</p>
                                                    }
                                                }
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Amount)
                                            </td>
                                            <td>
                                                @if (item.Storage != null)
                                                {
                                                    <a asp-controller="Storages" asp-action="Details" asp-route-id="@item.Storage.Id">@item.Storage.Title</a>
                                                }
                                            </td>
                                            <td>
                                                <a class="btn btn-primary" asp-controller="Parts" asp-action="Details" asp-route-id="@item.Part.Id">Details</a>
                                            </td>
                                        </tr>
                                    }
                                    else if (item.Equipment != null)
                                    {
                                        tableClass = (item.Equipment.OperatingTime > 0) ? (item.Equipment.OperatingTime < item.Equipment.WarningTime ? ((item.Equipment.OperatingTime == item.Equipment.WarningTime) ? "table-time-warning" : "") : "table-time-danger") : "";

                                        <tr class="@tableClass">

                                            <td>
                                                @{
                                                    if (item.Equipment.Status != null)
                                                    {
                                                        <span class="equip-current-status">
                                                            @Html.DisplayFor(model => item.Equipment.Status.Title)
                                                        </span>
                                                    }
                                                }
                                            </td>
                                            <td></td>
                                            <td>
                                                @Html.DisplayFor(model => item.Equipment.SerialNum)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Equipment.Title)
                                            </td>
                                            <td></td>
                                            <td>
                                                @{
                                                    int timeLeft = item.Equipment.WarningTime - item.Equipment.OperatingTime;
                                                    if (timeLeft > 0)
                                                    {
                                                        @(timeLeft / 60)<span>:</span>{
                                                            string minutes;
                                                            if (timeLeft % 60 < 10)
                                                            {
                                                                minutes = "0" + (timeLeft % 60);
                                                            }
                                                            else
                                                            {
                                                                minutes = (timeLeft % 60).ToString();
                                                            }
                                                            @minutes
                                                        }
                                                    }
                                                    else
                                                    {
                                                        timeLeft *= -1;
                                                        <span>Overwork by</span> @(timeLeft / 60)<span>:</span>{
                                                            string minutes;
                                                            if (timeLeft % 60 < 10)
                                                            {
                                                                minutes = "0" + (timeLeft % 60);
                                                            }
                                                            else
                                                            {
                                                                minutes = (timeLeft % 60).ToString();
                                                            }
                                                            @minutes
                                                        }
                                                        <p>No operating time left! Needs maintenance!</p>
                                                    }
                                                }
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Amount)
                                            </td>
                                            <td>
                                                @if (item.Storage != null)
                                                {
                                                    <a asp-controller="Storages" asp-action="Details" asp-route-id="@item.Storage.Id">@item.Storage.Title</a>
                                                }
                                            </td>
                                            <td>
                                                <a class="btn btn-primary" asp-controller="Equipment" asp-action="Details" asp-route-id="@item.Equipment.Id">Details</a>

                                            </td>
                                        </tr>
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>


            </div>
        </div>

        <div class="storagesTreeView-container">
            <div class="content-heading">
                <h4><a class="all-storages-link" href="" storage-id="0">Storages</a></h4>
                <a class="btn btn-primary" asp-action="Create">+</a>
            </div>
            <div id="storagesTreeViewExport">

            </div>
        </div>

    </div>

    <div class="container">
        @using (Html.BeginForm("Transfer", "Storages", FormMethod.Post))
        {
            <input type="hidden" id="stocksJSON" name="stocksJSON" value="" />
            <input type="hidden" id="storageId" name="storageId" value="" />
            <button id="submitBTN" class="btn btn-primary" type="submit" style="display:block;width:100%;">Save</button>
        }
    </div>

    <script>
    var storagesJSON = JSON.parse('@Html.Raw(OperationMonitoring.Helpers.JSConverter.SerializeObject(treeViewStorages))');
    $('#storagesTreeViewExport').jstree({
        "plugins": ["wholerow", "contextmenu", "search"],
        "core": {
            "multiple": false,
            "themes": {
                "dots": false,
                "icons": false,
                "responsive": false
            },
            "data": storagesJSON
        },
        "contextmenu": {
            "items": function ($node) {
                var tree = $("#storagesTreeViewExport").jstree(true);
                return {
                    "Details": {
                        "separator_before": false,
                        "separator_after": false,
                        "label": "Details",
                        "action": function (obj) {
                            window.location.href = $node.a_attr.href;
                        }
                    }
                };
            }
        }
    });

    function GetSelectedStorage() {
        var node = $("#storagesTreeViewExport").jstree("get_selected", true);
        return Number(node.attr('id'));
    }

    $("#submitBTN").click(function () {
        var st = JSON.parse('@Html.Raw(OperationMonitoring.Helpers.JSConverter.SerializeObject(stocks))');
        $("#stocksJSON").val(st);
        $("#storageId").val(GetSelectedStorage());
    });
    </script>