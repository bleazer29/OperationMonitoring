@model IList<OperationMonitoring.Helpers.TreeViewStorage>
@{List<OperationMonitoring.Models.Stock> stocks = ViewBag.Stocks;}
@{
    ViewData["Title"] = "Storages";

}
<div class="flex-container">
    <div class="storagesTreeView-container">
        <div class="content-heading">
            <h4>Storages</h4>
            <a class="btn btn-primary" asp-action="Create">+</a>
        </div>
        <div id="storagesTreeView">

        </div>
    </div>
    <div class="storage-items-container">
        <div class="search-panel">
            <div class="search-select">
                <select class="form-select">
                    <option value="1" selected>All</option>
                    <option value="2" selected>Nomenclature</option>
                    <option value="3" selected>Parts</option>
                    <option value="4" selected>Equipment</option>
                </select>
            </div>
            <button class="btn btn-primary">Transfer</button>
        </div>
        <div class="paged-list nomenclature-table">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            <a href="#" data-sort="Id">
                                Vendor code
                            </a>
                        </th>
                        <th class="sort-asc">
                            <a href="#" data-sort="Name">
                                Name
                            </a>
                        </th>
                        <th>
                            <a href="#" data-sort="Provider">
                                Provider
                            </a>
                        </th>
                        <th>
                            <a href="#" data-sort="Amount">
                                Amount
                            </a>
                        </th>
                        <th>
                            @*actions*@
                        </th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in stocks)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Nomenclature.VendorCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Nomenclature.Name)
                            </td>
                            <td>
                                @if (item.Nomenclature.Provider != null)
                                {
                                    <a asp-controller="Providers" asp-action="Details" asp-route-id="@item.Nomenclature.Provider.Id">
                                        @Html.DisplayFor(modelItem => item.Nomenclature.Provider.Name)
                                    </a>
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Amount)
                            </td>
                            <td>
                                <a class="btn" asp-controller="Nomenclature" asp-action="Details" asp-route-id="@item.Id">Details</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <!-- PAGES -->
            <div class="simple-pagination">
                <div class="simple-pagination-first"></div>
                <div class="simple-pagination-previous"></div>
                <div class="simple-pagination-page-numbers"></div>
                <div class="simple-pagination-next"></div>
                <div class="simple-pagination-last"></div>
            </div>
        </div>

    </div>


</div>



<script>
    var storagesJSON = JSON.parse('@Html.Raw(OperationMonitoring.Helpers.JSConverter.SerializeObject(Model))');
    $('#storagesTreeView').jstree({
        "plugins": ["wholerow", "contextmenu", "search"],
        "core": {
            "multiple": false,
            "themes": {
                "dots": false,
                "icons": false,
                "responsive":true
            },
            "data": storagesJSON
        },
        "contextmenu": {
            "items": function ($node) {
                var tree = $("#storagesTreeView").jstree(true);
                return {
                    "Details": {
                        "separator_before": false,
                        "separator_after": false,
                        "label": "Details",
                        "action": function (obj) {
                            window.location.href = $node.a_attr.href;
                        }
                    }
                };
            }
        }

    });
</script>

<script>
    //$(function () {
    //    $('#storagesTreeView').on("select_node.jstree", function (e, data) { window.location.href = "/Storages/Details/id=" + data.node.id; });
    //});

</script>

<script>
    var search = "";
    var sortField = "Name"; // default - "Title"
    var sortAsc = true; // default

    var pagedList = "#paged-list";
    GenList(pagedList);

    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/data")
        .build();

    hubConnection.on("Receive", function (data) {
        $(pagedList + " tbody").empty();
        var json = JSON.parse(data);
        for (let i = 0; i < json.length; i++) {
            var providerHTML = "";
            if (json[i].Nomenclature.Provider != null) providerHTML = json[i].Nomenclature.Name
            $(pagedList + " tbody").append(
                "<tr>" +
                    "<td>" + json[i].Nomenclature.VendorCode + "</td>" +
                    "<td>" + json[i].Nomenclature.Name + "</td>" +
                    "<td>" + providerHTML + "</td>" +
                    "<td>" + json[i].Amount + "</td>" +
                    "<td> </td>" +
                "</tr>"
            );
        }
        GenList(pagedList);
    });


    $(pagedList + " th a").click(function (e) {
        e.preventDefault();
        $(pagedList + " th").removeClass();
        if (sortField == $(this).attr("data-sort")) {
            sortAsc = false;
            $(this).parent().addClass("sort-desc");
        }
        else {
            sortAsc = true;
            $(this).parent().addClass("sort-asc");
            sortField = $(this).attr("data-sort");
        }
        hubConnection.invoke("SendCounterparties", search, sortField, sortAsc);
    });
    hubConnection.start();
</script>