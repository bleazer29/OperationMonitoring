@model IEnumerable<OperationMonitoring.Models.Nomenclature>

<div class="content-heading">
    <h4>Nomenclature</h4>
    @if ((string)ViewData["Controller"] == "Nomenclature")
    {
        <a class="btn btn-primary" asp-action="Create">Add New Nomenclature</a>
    }
</div>

<!-- SEARCH PANEL -->
<div class="search-panel">
    <div class="search-form">
        <div class="search-field">
            <div class="search-label">
                <label class="control-label">Field:</label>
            </div>
            <div class="search-select">
                <select id="searchField" class="form-select">
                    <option value="VendorCode">Vendor Code</option>
                    <option selected value="Title">Title</option>
                    <option value="Provider">Provider</option>
                </select>
            </div>
        </div>
        <div class="search-field search-field-input">
            <div class="search-label">
                <label class="control-label">Search:</label>
            </div>
            <div class="search-textbox">
                <input type="text" id="searchString" value="" />
            </div>
        </div>
        <button class="btn btn-primary js-btn-search">Search</button>
        <a asp-action="Index" class="btn btn-alter btn-refresh">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 22"><path d="m120.6 38.723c-3.312-7.713-7.766-14.367-13.36-19.961-5.595-5.594-12.248-10.05-19.962-13.361-7.713-3.314-15.805-4.97-24.278-4.97-7.984 0-15.71 1.506-23.18 4.521-7.468 3.01-14.11 7.265-19.92 12.751l-10.593-10.511c-1.63-1.684-3.503-2.064-5.622-1.141-2.173.924-3.259 2.527-3.259 4.808v36.5c0 1.412.516 2.634 1.548 3.666 1.033 1.032 2.255 1.548 3.667 1.548h36.5c2.282 0 3.884-1.086 4.807-3.259.923-2.118.543-3.992-1.141-5.622l-11.162-11.243c3.803-3.585 8.148-6.341 13.04-8.27 4.889-1.928 9.994-2.893 15.317-2.893 5.649 0 11.04 1.101 16.17 3.3 5.133 2.2 9.572 5.174 13.32 8.922 3.748 3.747 6.722 8.187 8.922 13.32 2.199 5.133 3.299 10.523 3.299 16.17 0 5.65-1.1 11.04-3.299 16.17-2.2 5.133-5.174 9.573-8.922 13.321-3.748 3.748-8.188 6.722-13.32 8.921-5.133 2.2-10.525 3.3-16.17 3.3-6.464 0-12.574-1.412-18.332-4.236-5.757-2.824-10.618-6.816-14.583-11.977-.38-.543-1-.87-1.874-.979-.815 0-1.494.244-2.037.733l-11.162 11.244c-.434.436-.665.991-.692 1.67-.027.68.15 1.29.53 1.833 5.921 7.17 13.09 12.724 21.509 16.661 8.419 3.937 17.3 5.907 26.642 5.907 8.473 0 16.566-1.657 24.279-4.97 7.713-3.313 14.365-7.768 19.961-13.361 5.594-5.596 10.05-12.248 13.361-19.961 3.313-7.713 4.969-15.807 4.969-24.279 0-8.474-1.657-16.564-4.97-24.277" transform="matrix(.12785 0 0 .12786 2.95 2.948)" fill="#ffffff" /></svg>
        </a>
    </div>
</div>

<!-- LIST -->
<div id="paged-list">
    <table class="@((string)@ViewData["Controller"] == "Preset" ? "table-preset" : "") table table-nomenclature">
        <thead>
            <tr>
                <th class="sort-asc">
                    <a href="#" data-sort="VendorCode">
                        @Html.DisplayNameFor(model => model.VendorCode)
                    </a>
                </th>
                <th>
                    <a href="#" data-sort="Title">
                        @Html.DisplayNameFor(model => model.Title) (and info)
                    </a>
                </th>
                <th>
                    <a href="#" data-sort="Provider">
                        @Html.DisplayNameFor(model => model.Provider)
                    </a>
                </th>
                <th class='nomenclature-list-amount'>
                    <!-- actions -->
                </th>
                <th class='nomenclature-list-button'>
                    <!-- actions -->
                </th>
                <th>
                    <!-- actions -->
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td class="vendor">
                    @Html.DisplayFor(modelItem => item.VendorCode)
                </td>
                <td class="info">
                    @Html.DisplayFor(modelItem => item.Title)
                    @if (item.Specification != null){
                    <p>
                        <span>@item.Specification.Material</span>
                        <span>@item.Specification.Weight</span>
                        <span>@item.Specification.Height</span>
                        <span>@item.Specification.OperatingTime</span>
                    </p>
                    }
                </td>
                <td class="provider">
                    @if (item.Provider != null)
                    {
                        <a asp-controller="Providers" asp-action="Details" asp-route-id="@item.Provider.Id">
                            @Html.DisplayFor(modelItem => item.Provider.Title)
                        </a>
                    }
                </td>
                <td class="nomenclature-list-amount">
                    <input type='number' min='1' name="input-@item.Id" />
                </td>
                <td class='nomenclature-list-button'>
                    <span data-id="@item.Id" class="btn btn-primary js-get-nomenclature">Get</span>
                </td>
                <td>
                    <a asp-controller="Nomenclature" asp-action="Details" asp-route-id="@item.Id" class="btn"> Details </a>
                </td>
            </tr>
            }
        </tbody>
    </table>
    <div class="simple-pagination">
        <div class="simple-pagination-first"></div>
        <div class="simple-pagination-previous"></div>
        <div class="simple-pagination-page-numbers"></div>
        <div class="simple-pagination-next"></div>
        <div class="simple-pagination-last"></div>
    </div>
</div>

<script>
    var searchField = "Title"; // default
    var search = "";
    var sortField = "VendorCode"; // default
    var sortAsc = true; // default
    var pagedList = "#paged-list";
    GenList(pagedList);

    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/data")
        .build();

    hubConnection.on("Receive", function (data) {
        console.log('sended');
        $(pagedList + " tbody").empty();
        var json = JSON.parse(data);
        for (let i = 0; i < json.length; i++) {
            $(pagedList + " tbody").append(
                "<tr>" +
                    "<td class='vendor'>" + json[i].VendorCode + "</td>" +
                    "<td class='info'>" + json[i].Title + "</td>" +
                    "<td class='provider'>" + getProviderInfo(json[i].Provider) + "</td>" +
                    "<td class='nomenclature-list-amount'>" +
                    "<input type='number' min='1' name='input-" + json[i].Id + "' />" +
                    "</td>" +
                    "<td class='nomenclature-list-button'>" +
                    "<span data-id='" + json[i].Id + "' class='btn btn-primary js-get-nomenclature'>Get</span>" +
                    "</td>" +
                    "<td>" +
                    "<a href='/Nomenclature/Details/" + json[i].Id + "' class='btn'> Details </a>" +
                    "</td>" +
                "</tr>"
            );
        }
        GenList(pagedList);
    });

    $(".js-btn-search").click(function () {
        search = $("#searchString").val();
        searchField = $("#searchField option:selected").val();
        hubConnection.invoke("SendNomenclature", search, searchField, sortField, sortAsc);
    });

    $(pagedList + " th a").click(function (e) {
        e.preventDefault();
        $(pagedList + " th").removeClass("sort-asc sort-desc");
        if (sortField == $(this).attr("data-sort")) {
            sortAsc = !sortAsc;
        }
        else {
            sortAsc = true;
        }
        if (sortAsc == true) {
            $(this).parent().addClass("sort-asc");
        }
        else {
            $(this).parent().addClass("sort-desc");
        }
        sortField = $(this).attr("data-sort");
        hubConnection.invoke("SendNomenclature", search, searchField, sortField, sortAsc);
    });

    hubConnection.start();

    function getProviderInfo(provider) {
        var providerInfo = "<Unknown>";
        if (provider != null) {
            providerInfo = "<a href='/Providers/Details/" + provider.Id + "'>" + provider.Title + "</a>";
        }
        return providerInfo;
    }
    //function getSpecificationInfo(specification) {
    //LATER
    //}
</script>
