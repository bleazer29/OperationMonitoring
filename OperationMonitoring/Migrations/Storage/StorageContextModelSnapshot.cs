// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OperationMonitoring.Data;

namespace OperationMonitoring.Migrations.Storage
{
    [DbContext(typeof(StorageContext))]
    partial class StorageContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OperationMonitoring.Models.StorageModels.Nomenclature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("Specifications")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId");

                    b.ToTable("Nomenclatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 15,
                            Name = "Motor",
                            ProviderId = 1,
                            Specifications = "Small"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 0,
                            Name = "Spacer",
                            ProviderId = 1,
                            Specifications = "Big"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 16,
                            Name = "Ring",
                            ProviderId = 2,
                            Specifications = "Small"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 15,
                            Name = "Shaft",
                            ProviderId = 2,
                            Specifications = "Big"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 5,
                            Name = "Ring",
                            ProviderId = 1,
                            Specifications = "Big"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 10,
                            Name = "Shaft",
                            ProviderId = 1,
                            Specifications = "Big"
                        });
                });

            modelBuilder.Entity("OperationMonitoring.Models.StorageModels.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Providers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Address1",
                            Name = "Provider1"
                        },
                        new
                        {
                            Id = 2,
                            Address = "8 Wang Hoi Road, Kowloon Bay, Hong Kong",
                            Name = "New Provider"
                        },
                        new
                        {
                            Id = 3,
                            Address = "148 Wing Lok Street, Sheung Wan, Hong Kong",
                            Name = "AIP Company"
                        });
                });

            modelBuilder.Entity("OperationMonitoring.Models.StorageModels.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("NomenclatureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NomenclatureId");

                    b.ToTable("Purchases");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 5,
                            Date = new DateTime(2020, 7, 23, 13, 59, 47, 286, DateTimeKind.Local).AddTicks(6523),
                            NomenclatureId = 6
                        },
                        new
                        {
                            Id = 2,
                            Amount = 10,
                            Date = new DateTime(2020, 7, 13, 13, 59, 47, 289, DateTimeKind.Local).AddTicks(4444),
                            NomenclatureId = 6
                        },
                        new
                        {
                            Id = 3,
                            Amount = 5,
                            Date = new DateTime(2020, 7, 13, 13, 59, 47, 289, DateTimeKind.Local).AddTicks(4607),
                            NomenclatureId = 5
                        },
                        new
                        {
                            Id = 4,
                            Amount = 15,
                            Date = new DateTime(2020, 7, 23, 13, 59, 47, 289, DateTimeKind.Local).AddTicks(4616),
                            NomenclatureId = 4
                        },
                        new
                        {
                            Id = 5,
                            Amount = 15,
                            Date = new DateTime(2020, 4, 23, 13, 59, 47, 289, DateTimeKind.Local).AddTicks(4619),
                            NomenclatureId = 3
                        },
                        new
                        {
                            Id = 6,
                            Amount = 1,
                            Date = new DateTime(2020, 7, 23, 13, 59, 47, 289, DateTimeKind.Local).AddTicks(4705),
                            NomenclatureId = 3
                        },
                        new
                        {
                            Id = 7,
                            Amount = 15,
                            Date = new DateTime(2020, 7, 23, 13, 59, 47, 289, DateTimeKind.Local).AddTicks(4708),
                            NomenclatureId = 1
                        });
                });

            modelBuilder.Entity("OperationMonitoring.Models.StorageModels.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("NomenclatureId")
                        .HasColumnType("int");

                    b.Property<int>("StorageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NomenclatureId");

                    b.HasIndex("StorageId");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 5,
                            NomenclatureId = 6,
                            StorageId = 4
                        },
                        new
                        {
                            Id = 2,
                            Amount = 2,
                            NomenclatureId = 6,
                            StorageId = 6
                        },
                        new
                        {
                            Id = 3,
                            Amount = 5,
                            NomenclatureId = 1,
                            StorageId = 4
                        },
                        new
                        {
                            Id = 4,
                            Amount = 5,
                            NomenclatureId = 1,
                            StorageId = 5
                        });
                });

            modelBuilder.Entity("OperationMonitoring.Models.StorageModels.Storage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Storages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Main Building"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Side Building"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Floor 1",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Floor 2",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Floor 3",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Room 4",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 7,
                            Name = "Room 5",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 8,
                            Name = "Room 6",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 9,
                            Name = "Room 7",
                            ParentId = 4
                        });
                });

            modelBuilder.Entity("OperationMonitoring.Models.StorageModels.Nomenclature", b =>
                {
                    b.HasOne("OperationMonitoring.Models.StorageModels.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OperationMonitoring.Models.StorageModels.Purchase", b =>
                {
                    b.HasOne("OperationMonitoring.Models.StorageModels.Nomenclature", "Nomenclature")
                        .WithMany()
                        .HasForeignKey("NomenclatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OperationMonitoring.Models.StorageModels.Stock", b =>
                {
                    b.HasOne("OperationMonitoring.Models.StorageModels.Nomenclature", "Nomenclature")
                        .WithMany()
                        .HasForeignKey("NomenclatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OperationMonitoring.Models.StorageModels.Storage", "Storage")
                        .WithMany()
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OperationMonitoring.Models.StorageModels.Storage", b =>
                {
                    b.HasOne("OperationMonitoring.Models.StorageModels.Storage", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });
#pragma warning restore 612, 618
        }
    }
}
